plugins {
    id "java"
    id "net.tribe-seven.swig" version "0.1.1"
}

task compileSwig(type: SwigTask) {
    verbose = true
    javaSourcesPath = new File("$projectDir/src/main/java/example_package")
    source = new File("$projectDir/swig/example.i")
    wrapperTargetFile = new File("$projectDir/swig/example_wrap.c")
    module = "example"
    packageName = "example_package"
}

task compileObjects(dependsOn: compileSwig) {

    buildDir.mkdirs()
    doLast {
        exec {
            commandLine "gcc", "-fpic", "-c", "swig/example.c", "-o", "$buildDir/example.o", "-I/usr/lib/jvm/java-8-openjdk/include/", "-I/usr/lib/jvm/java-8-openjdk/include/linux"
        }

        exec {
            commandLine "gcc", "-fpic", "-c", "swig/example_wrap.c", "-o", "$buildDir/example_wrap.o", "-I/usr/lib/jvm/java-8-openjdk/include/", "-I/usr/lib/jvm/java-8-openjdk/include/linux"
        }
    }
}

task generateLibrary(dependsOn: compileObjects) {
    doLast {
        exec {
            commandLine "gcc", "-shared", "$buildDir/example.o",  "$buildDir/example_wrap.o", "-o", "$buildDir/libexample.so"
        }
    }
}

compileJava.dependsOn generateLibrary


task testRun(dependsOn: compileJava) {
    doLast {
        exec {
            workingDir "$buildDir/classes/java/main"
            environment "LD_LIBRARY_PATH": "$buildDir"
            environment "DYLD_LIBRARY_PATH":  "$buildDir"
            commandLine "java", "runme"
        }
    }
}
